# https://aka.ms/yaml

trigger:
- master

jobs:
- job: RunOnUbuntu16_04
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - script: |
      sudo apt-get update
      sudo apt-get install -y git cmake libmpfr-dev libboost1.58-dev
    displayName: 'Install dependencies'

  - script: cmake -H. -Bbuild
    displayName: 'Configure'

  - script: cmake --build build
    displayName: 'Build'

  - script: ./build/pi_day
    displayName: 'Run'
- job: RunOnUbuntu18_04Container
  pool:
    vmImage: 'Ubuntu-16.04'

  container: prsam/pi-day:llvm8-stretch

  steps:
  - script: cmake -H. -Bbuild -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DPI_DIGITS=1000000
    displayName: 'Configure'

  - script: cmake --build build
    displayName: 'Build'

  - script: ./build/pi_day
    displayName: 'Run'

- job: RunOnMacOS
  pool:
    vmImage: 'macOS-10.13'  # 'vs2017-win2016'

  steps:
  - script: |
      /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    displayName: 'Install Homebrew'

  - script: brew install mpfr boost
    displayName: 'Install dependencies'

  - script: cmake -H. -Bbuild
    displayName: 'Configure'

  - script: cmake --build build
    displayName: 'Build'

  - script: ./build/pi_day
    displayName: 'Run'

- job: RunOnWinVS17
  pool:
    vmImage: 'vs2017-win2016'

  steps:
  - script: git clone --depth=1 https://github.com/Microsoft/vcpkg.git
    displayName: 'Install Vcpkg'

  - script: .\vcpkg\bootstrap-vcpkg.bat
    displayName: 'Bootstrap vcpkg'

  - script: .\vcpkg\vcpkg.exe install boost-multiprecision:x64-windows mpfr:x64-windows
    displayName: 'Install Dependencies'

  - script: .\vcpkg\vcpkg.exe export boost-multiprecision:x64-windows mpfr:x64-windows --7zip --nuget
    displayName: 'Install Dependencies'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'vcpkg'
      artifactName: vcpkg-workdir

  - script: cmake -H. -Bbuild -DCMAKE_TOOLCHAIN_FILE=../vcpkg/scripts/buildsystems/vcpkg.cmake -G"Visual Studio 15 2017 Win64"
    displayName: 'Configure'

  - script: cmake --build build --config Release
    displayName: 'Build'

  - script: .\build\Release\pi-day.exe
    displayName: 'Run'

